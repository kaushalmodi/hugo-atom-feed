{{ printf `<?xml version="1.0" encoding="utf-8"?>` | safeHTML }} {{/* ref: https://validator.w3.org/feed/docs/atom.html */}}
<feed xmlns="http://www.w3.org/2005/Atom"{{ with site.LanguageCode }} xml:lang="{{ . }}"{{ end }}>
    <generator uri="https://gohugo.io/" version="{{ hugo.Version }}">Hugo</generator>
    <title>
        {{- with .Title -}}
            {{- if (not (eq . site.Title)) }}
                {{ . }} on
            {{ end }}
        {{ end }}
        {{ site.Title -}}
        {{- if .IsTranslated }} ({{ index site.Data.i18n.languages .Lang }}){{ end -}}
    </title>
    {{ $output_formats := .OutputFormats }}
    {{ range $output_formats -}}
        {{- $rel := (or (and (eq "atom" (.Name | lower)) "self") "alternate") -}}
        {{ with $output_formats.Get .Name }}
            {{ printf `<link href=%q rel=%q type=%q title=%q />` .Permalink $rel .MediaType.Type .Name | safeHTML }}
        {{- end -}}
    {{- end }}
    {{- range .Translations }}
        {{- $lang := .Lang }}
        {{- $langstr := index site.Data.i18n.languages .Lang }}
        {{ range $output_formats -}}
            {{ with $output_formats.Get .Name }}
                {{ printf `<link href=%q rel="alternate" type=%q hreflang=%q title="[%s] %s" />` .Permalink .MediaType.Type $lang $langstr .Name | safeHTML }}
            {{- end -}}
        {{- end }}
    {{- end }}
    <updated>{{ now.Format "2006-01-02T15:04:05-07:00" | safeHTML }}</updated>
    {{ with site.Copyright }}
        {{- $copyright := . | replace "{year}" now.Year -}} {{/* In case the site.copyright uses a special string "{year}" */}}
        {{- $copyright = $copyright | replace "&copy;" "Â©" -}}
        <rights>{{ $copyright | plainify }}</rights>
    {{- end }}
    {{ with .Param "feed" }}
        {{/* For this to work, the $icon file should be present in the assets/ directory */}}
        {{- $icon := .icon | default "icon.svg" -}}
        {{- with resources.Get $icon -}}
            <icon>{{ (. | fingerprint).Permalink }}</icon>
        {{- end }}

        {{/* For this to work, the $logo file should be present in the assets/ directory */}}
        {{- $logo := .logo | default "logo.svg" -}}
        {{- with resources.Get $logo -}}
            <logo>{{ (. | fingerprint).Permalink }}</logo>
        {{- end }}
    {{ end }}
    {{ if site.Author.name }} <!-- this is a single author map -->
        {{ with site.Author }}
            {{- $author := site.GetPage (printf "/%s/%s" "authors" .name) }}
            <author>
                {{- with $author.Params.name }} <!-- use author name from profile page if found -->
                    <name>{{ . | plainify }}</name>
                {{- else -}}
                    <name>{{ .name | plainify }}</name>
                {{- end -}}
                {{- with .uri }} <!-- explicitly overwrite uri -->
                    <uri>{{ . | safeHTML }}</uri>
                {{- else }}
                    {{ with $author }}
                        {{- with .Params.uri }} <!-- use different author uri from profile page if found -->
                            <uri>{{ . | safeHTML }}</uri>
                        {{- else }} <!-- link to profile page -->
                            <uri>{{ .Permalink }}</uri>
                        {{- end -}}
                    {{- end -}}
                {{- end -}}
                {{- with .email }} <!-- explicitly overwrite email -->
                    <email>{{ . | safeHTML }}</email>
                {{- else }}
                    {{ with $author }}
                        {{- with .Params.email }} <!-- use different author email from profile page if found -->
                            <email>{{ . | safeHTML }}</email>
                        {{- end -}}
                    {{- end -}}
                {{- end -}}
            </author>
        {{- end -}}
    {{ else }} <!-- this is a multi author map -->
        {{ range $elem_index, $elem_val := site.Author }}
            {{- $name := .name | default $elem_index }}
            {{- $author := site.GetPage (printf "/%s/%s" "authors" $name) }}
            <author>
                {{- with $author.Params.name }} <!-- use author name from profile page if found -->
                    <name>{{ . | plainify }}</name>
                {{- else -}}
                    <name>{{ $name | plainify }}</name>
                {{- end -}}
                {{- with .uri }} <!-- explicitly overwrite uri -->
                    <uri>{{ . | safeHTML }}</uri>
                {{- else }}
                    {{ with $author }}
                        {{- with .Params.uri }} <!-- use different author uri from profile page if found -->
                            <uri>{{ . | safeHTML }}</uri>
                        {{- else }} <!-- link to profile page -->
                            <uri>{{ .Permalink }}</uri>
                        {{- end -}}
                    {{- end -}}
                {{- end -}}
                {{- with .email }} <!-- explicitly overwrite email -->
                    <email>{{ . | safeHTML }}</email>
                {{- else }}
                    {{ with $author }}
                        {{- with .Params.email }} <!-- use different author email from profile page if found -->
                            <email>{{ . | safeHTML }}</email>
                        {{- end -}}
                    {{- end -}}
                {{- end -}}
            </author>
        {{ end }}
    {{ end }}
    {{ $contributors := "" }}
    {{ with site.Params.contributor }}
        {{ $contributors = . }}
    {{ else }}
        {{ with site.Params.contributors }}
            {{ $contributors = . }}
        {{ end }}
    {{ end }}
    {{ if and $contributors (reflect.IsSlice $contributors) }} <!-- if contributors are defined as slice -->
        {{ range $contributors }}
            {{- $contributor := site.GetPage (printf "/%s/%s" "authors" .) }}
            <contributor>
                {{- with $contributor.Params.name }} <!-- use contributor name from profile page if found -->
                    <name>{{ . | plainify }}</name>
                {{- else -}}
                    <name>{{ . | plainify }}</name>
                {{- end -}}
                {{ with $contributor }}
                    {{- with .Params.uri }} <!-- use different contributor uri from profile page if found -->
                        <uri>{{ . | safeHTML }}</uri>
                    {{- else }} <!-- link to profile page -->
                        <uri>{{ .Permalink }}</uri>
                    {{- end -}}
                    {{- with .Params.email }} <!-- use different contributor email from profile page if found -->
                        <email>{{ . | safeHTML }}</email>
                    {{- end -}}
                {{- end -}}
            </contributor>
        {{ end }}
    {{ else if and $contributors (reflect.IsMap $contributors) }} <!-- if contributors are defined as map -->
        {{ if $contributors.name }} <!-- this is a single contributor map -->
            {{ with $contributors }}
                {{- $contributor := site.GetPage (printf "/%s/%s" "authors" .name) }}
                <contributor>
                    {{- with $contributor.Params.name }} <!-- use contributor name from profile page if found -->
                        <name>{{ . | plainify }}</name>
                    {{- else -}}
                        <name>{{ .name | plainify }}</name>
                    {{- end -}}
                    {{- with .uri }} <!-- explicitly overwrite uri -->
                        <uri>{{ . | safeHTML }}</uri>
                    {{- else }}
                        {{ with $contributor }}
                            {{- with .Params.uri }} <!-- use different contributor uri from profile page if found -->
                                <uri>{{ . | safeHTML }}</uri>
                            {{- else }} <!-- link to profile page -->
                                <uri>{{ .Permalink }}</uri>
                            {{- end -}}
                        {{- end -}}
                    {{- end -}}
                    {{- with .email }} <!-- explicitly overwrite email -->
                        <email>{{ . | safeHTML }}</email>
                    {{- else }}
                        {{ with $contributor }}
                            {{- with .Params.email }} <!-- use different contributor email from profile page if found -->
                                <email>{{ . | safeHTML }}</email>
                            {{- end -}}
                        {{- end -}}
                    {{- end -}}
                </contributor>
            {{ end }}
        {{ else }} <!-- this is a multi contributor map -->
            {{ range $elem_index, $elem_val := $contributors }}
                {{- $name := .name | default $elem_index }}
                {{- $contributor := site.GetPage (printf "/%s/%s" "authors" $name) }}
                <contributor>
                    {{- with $contributor.Params.name }} <!-- use contributor name from profile page if found -->
                        <name>{{ . | plainify }}</name>
                    {{- else -}}
                        <name>{{ $name | plainify }}</name>
                    {{- end -}}
                    {{- with .uri }} <!-- explicitly overwrite uri -->
                        <uri>{{ . | safeHTML }}</uri>
                    {{- else }}
                        {{ with $contributor }}
                            {{- with .Params.uri }} <!-- use different contributor uri from profile page if found -->
                                <uri>{{ . | safeHTML }}</uri>
                            {{- else }} <!-- link to profile page -->
                                <uri>{{ .Permalink }}</uri>
                            {{- end -}}
                        {{- end -}}
                    {{- end -}}
                    {{- with .email }} <!-- explicitly overwrite email -->
                        <email>{{ . | safeHTML }}</email>
                    {{- else }}
                        {{ with $contributor }}
                            {{- with .Params.email }} <!-- use different contributor email from profile page if found -->
                                <email>{{ . | safeHTML }}</email>
                            {{- end -}}
                        {{- end -}}
                    {{- end -}}
                </contributor>
            {{ end }}
        {{ end }}
    {{ else if $contributors }} <!-- simple contributor name -->
        <contributor><name>{{ $contributors | plainify }}</name></contributor>
    {{ end }}
    {{ with site.Params.id }}
        <id>{{ . | plainify }}</id>
    {{ else }}
        <id>{{ .Permalink }}</id>
    {{ end }}
    {{- $limit := (cond (le site.Config.Services.RSS.Limit 0) 65536 site.Config.Services.RSS.Limit) }}
    {{- $feed_sections := site.Params.feedSections | default site.Params.mainSections -}}
    {{/* Range through only the pages with a Type in $feed_sections */}}
    {{- $pages := where .Pages "Type" "in" $feed_sections -}}
    {{- range first $limit $pages }}
        {{ $page := . }}
        <entry>
            {{ printf `<title type="html"><![CDATA[%s]]></title>` .Title | safeHTML }}
            <link href="{{ .Permalink }}?utm_source=atom_feed" rel="alternate" type="text/html" />
            {{- range .Translations }}
                {{- $link := printf "%s?utm_source=atom_feed" .Permalink | safeHTML }}
                {{- printf `<link href=%q rel="alternate" type="text/html" hreflang=%q />` $link .Lang | safeHTML }}
            {{- end }}
            {{/* rel=related: See https://validator.w3.org/feed/docs/atom.html#link */}}
            {{- range first 5 (site.RegularPages.Related .) }}
                <link href="{{ .Permalink }}?utm_source=atom_feed" rel="related" type="text/html" title="{{ .Title }}" />
            {{- end }}
            {{ with .Params.id }}
                <id>{{ . | plainify }}</id>
            {{ else }}
                <id>{{ .Permalink }}</id>
            {{ end }}
            {{ $authors := "" }}
            {{ with .Params.author }}
                {{ $authors = . }}
            {{ else }}
                {{ with .Params.authors }}
                    {{ $authors = . }}
                {{ end }}
            {{ end }}
            {{ if and $authors (reflect.IsSlice $authors) }} <!-- if authors are defined as slice -->
                {{ range $authors }}
                    {{- $author := site.GetPage (printf "/%s/%s" "authors" .) }}
                    <author>
                        {{- with $author.Params.name }} <!-- use author name from profile page if found -->
                            <name>{{ . | plainify }}</name>
                        {{- else -}}
                            <name>{{ . | plainify }}</name>
                        {{- end -}}
                        {{ with $author }}
                            {{- with .Params.uri }} <!-- use different author uri from profile page if found -->
                                <uri>{{ . | safeHTML }}</uri>
                            {{- else }} <!-- link to profile page -->
                                <uri>{{ .Permalink }}</uri>
                            {{- end -}}
                            {{- with .Params.email }} <!-- use different author email from profile page if found -->
                                <email>{{ . | safeHTML }}</email>
                            {{- end -}}
                        {{- end -}}
                    </author>
                {{ end }}
            {{ else if and $authors (reflect.IsMap $authors) }} <!-- if authors are defined as map -->
                {{ if $authors.name }} <!-- this is a single author map -->
                    {{ with $authors }}
                        {{- $author := site.GetPage (printf "/%s/%s" "authors" .name) }}
                        <author>
                            {{- with $author.Params.name }} <!-- use author name from profile page if found -->
                                <name>{{ . | plainify }}</name>
                            {{- else -}}
                                <name>{{ .name | plainify }}</name>
                            {{- end -}}
                            {{- with .uri }} <!-- explicitly overwrite uri -->
                                <uri>{{ . | safeHTML }}</uri>
                            {{- else }}
                                {{ with $author }}
                                    {{- with .Params.uri }} <!-- use different author uri from profile page if found -->
                                        <uri>{{ . | safeHTML }}</uri>
                                    {{- else }} <!-- link to profile page -->
                                        <uri>{{ .Permalink }}</uri>
                                    {{- end -}}
                                {{- end -}}
                            {{- end -}}
                            {{- with .email }} <!-- explicitly overwrite email -->
                                <email>{{ . | safeHTML }}</email>
                            {{- else }}
                                {{ with $author }}
                                    {{- with .Params.email }} <!-- use different author email from profile page if found -->
                                        <email>{{ . | safeHTML }}</email>
                                    {{- end -}}
                                {{- end -}}
                            {{- end -}}
                        </author>
                    {{ end }}
                {{ else }} <!-- this is a multi author map -->
                    {{ range $elem_index, $elem_val := $authors }}
                        {{- $name := .name | default $elem_index }}
                        {{- $author := site.GetPage (printf "/%s/%s" "authors" $name) }}
                        <author>
                            {{- with $author.Params.name }} <!-- use author name from profile page if found -->
                                <name>{{ . | plainify }}</name>
                            {{- else -}}
                                <name>{{ $name | plainify }}</name>
                            {{- end -}}
                            {{- with .uri }} <!-- explicitly overwrite uri -->
                                <uri>{{ . | safeHTML }}</uri>
                            {{- else }}
                                {{ with $author }}
                                    {{- with .Params.uri }} <!-- use different author uri from profile page if found -->
                                        <uri>{{ . | safeHTML }}</uri>
                                    {{- else }} <!-- link to profile page -->
                                        <uri>{{ .Permalink }}</uri>
                                    {{- end -}}
                                {{- end -}}
                            {{- end -}}
                            {{- with .email }} <!-- explicitly overwrite email -->
                                <email>{{ . | safeHTML }}</email>
                            {{- else }}
                                {{ with $author }}
                                    {{- with .Params.email }} <!-- use different author email from profile page if found -->
                                        <email>{{ . | safeHTML }}</email>
                                    {{- end -}}
                                {{- end -}}
                            {{- end -}}
                        </author>
                    {{ end }}
                {{ end }}
            {{ else if $authors }} <!-- simple author name -->
                <author><name>{{ $authors | plainify }}</name></author>
            {{ end }}
            {{ $contributors := "" }}
            {{ with .Params.contributor }}
                {{ $contributors = . }}
            {{ else }}
                {{ with .Params.contributors }}
                    {{ $contributors = . }}
                {{ end }}
            {{ end }}
            {{ if and $contributors (reflect.IsSlice $contributors) }} <!-- if contributors are defined as slice -->
                {{ range $contributors }}
                    {{- $contributor := site.GetPage (printf "/%s/%s" "authors" .) }}
                    <contributor>
                        {{- with $contributor.Params.name }} <!-- use contributor name from profile page if found -->
                            <name>{{ . | plainify }}</name>
                        {{- else -}}
                            <name>{{ . | plainify }}</name>
                        {{- end -}}
                        {{ with $contributor }}
                            {{- with .Params.uri }} <!-- use different contributor uri from profile page if found -->
                                <uri>{{ . | safeHTML }}</uri>
                            {{- else }} <!-- link to profile page -->
                                <uri>{{ .Permalink }}</uri>
                            {{- end -}}
                            {{- with .Params.email }} <!-- use different contributor email from profile page if found -->
                                <email>{{ . | safeHTML }}</email>
                            {{- end -}}
                        {{- end -}}
                    </contributor>
                {{ end }}
            {{ else if and $contributors (reflect.IsMap $contributors) }} <!-- if contributors are defined as map -->
                {{ if $contributors.name }} <!-- this is a single contributor map -->
                    {{ with $contributors }}
                        {{- $contributor := site.GetPage (printf "/%s/%s" "authors" .name) }}
                        <contributor>
                            {{- with $contributor.Params.name }} <!-- use contributor name from profile page if found -->
                                <name>{{ . | plainify }}</name>
                            {{- else -}}
                                <name>{{ .name | plainify }}</name>
                            {{- end -}}
                            {{- with .uri }} <!-- explicitly overwrite uri -->
                                <uri>{{ . | safeHTML }}</uri>
                            {{- else }}
                                {{ with $contributor }}
                                    {{- with .Params.uri }} <!-- use different contributor uri from profile page if found -->
                                        <uri>{{ . | safeHTML }}</uri>
                                    {{- else }} <!-- link to profile page -->
                                        <uri>{{ .Permalink }}</uri>
                                    {{- end -}}
                                {{- end -}}
                            {{- end -}}
                            {{- with .email }} <!-- explicitly overwrite email -->
                                <email>{{ . | safeHTML }}</email>
                            {{- else }}
                                {{ with $contributor }}
                                    {{- with .Params.email }} <!-- use different contributor email from profile page if found -->
                                        <email>{{ . | safeHTML }}</email>
                                    {{- end -}}
                                {{- end -}}
                            {{- end -}}
                        </contributor>
                    {{ end }}
                {{ else }} <!-- this is a multi contributor map -->
                    {{ range $elem_index, $elem_val := $contributors }}
                        {{- $name := .name | default $elem_index }}
                        {{- $contributor := site.GetPage (printf "/%s/%s" "authors" $name) }}
                        <contributor>
                            {{- with $contributor.Params.name }} <!-- use contributor name from profile page if found -->
                                <name>{{ . | plainify }}</name>
                            {{- else -}}
                                <name>{{ $name | plainify }}</name>
                            {{- end -}}
                            {{- with .uri }} <!-- explicitly overwrite uri -->
                                <uri>{{ . | safeHTML }}</uri>
                            {{- else }}
                                {{ with $contributor }}
                                    {{- with .Params.uri }} <!-- use different contributor uri from profile page if found -->
                                        <uri>{{ . | safeHTML }}</uri>
                                    {{- else }} <!-- link to profile page -->
                                        <uri>{{ .Permalink }}</uri>
                                    {{- end -}}
                                {{- end -}}
                            {{- end -}}
                            {{- with .email }} <!-- explicitly overwrite email -->
                                <email>{{ . | safeHTML }}</email>
                            {{- else }}
                                {{ with $contributor }}
                                    {{- with .Params.email }} <!-- use different contributor email from profile page if found -->
                                        <email>{{ . | safeHTML }}</email>
                                    {{- end -}}
                                {{- end -}}
                            {{- end -}}
                        </contributor>
                    {{ end }}
                {{ end }}
            {{ else if $contributors }} <!-- simple contributor name -->
                <contributor><name>{{ $contributors | plainify }}</name></contributor>
            {{ end }}
            <published>{{ .Date.Format "2006-01-02T15:04:05-07:00" | safeHTML }}</published>
            <updated>{{ .Lastmod.Format "2006-01-02T15:04:05-07:00" | safeHTML }}</updated>
            {{ $description1 := .Description | default "" }}
            {{ $description := (cond (eq "" $description1) "" (printf "<blockquote>%s</blockquote>" ($description1 | markdownify))) }}
            {{ printf `<content type="html"><![CDATA[%s%s]]></content>` $description .Content | safeHTML }}
            {{ with site.Taxonomies }}
                {{ range $taxo,$_ := . }} <!-- Defaults taxos: "tags", "categories" -->
                    {{ with $page.Param $taxo }}
                        {{ $taxo_list := . }} <!-- $taxo_list will be the tags/categories list -->
                        {{ with site.GetPage (printf "/%s" $taxo) }}
                            {{ $taxonomy_page := . }}
                            {{ range $taxo_list }} <!-- Below, assuming pretty URLs -->
                                <category scheme="{{ printf "%s%s" $taxonomy_page.Permalink (. | urlize) }}" term="{{ (. | urlize) }}" label="{{ . }}" />
                            {{ end }}
                        {{ end }}
                    {{ end }}
                {{ end }}
            {{ end }}
        </entry>
    {{ end }}
</feed>
